{"version":3,"file":"static/js/771.68b63d10.chunk.js","mappings":"gLA+DA,MA3DA,SAAqBA,GACnB,OAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAoCF,EAAAA,EAAAA,YAApC,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAAgBC,EAAAA,EAAAA,UA+BtB,OA7BAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CAGA,IAAMS,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAClBR,EAAcM,EAAWG,OAC1B,EACDH,EAAWI,cAAcb,EALxB,CAMF,GAAE,CAACA,KAqBF,iBAAKc,UAAU,eAAf,WACE,kBACEC,GAAIjB,EAAMiB,GACVC,IAAKV,EACLW,MAAO,CAAEC,QAAS,QAClBC,KAAK,OACLC,OAAO,kBACPC,SA1BgB,SAACC,GACrB,IAAIC,EACAC,EAEAF,EAAIG,OAAOC,OAAoC,IAA3BJ,EAAIG,OAAOC,MAAMC,OACvCJ,EAAaD,EAAIG,OAAOC,MAAM,GAC9BzB,EAAQsB,GACRlB,GAAW,GACXmB,GAAc,IAEdnB,GAAW,GACXmB,GAAc,GAEhB1B,EAAM8B,QAAQ9B,EAAMiB,GAAIQ,EAAYC,EACrC,KAcG,iBAAKV,UAAS,uBAAkBhB,EAAM+B,QAAU,UAAhD,WACE,iBAAKf,UAAU,wBAAf,UACGZ,IAAc,gBAAK4B,IAAK5B,EAAY6B,IAAI,aACvC7B,IAAc,qDAElB,SAAC8B,EAAA,EAAD,CAAQb,KAAK,SAASc,QAlBH,WACvB3B,EAAc4B,QAAQC,OACvB,EAgBK,4BAIA/B,IAAW,uBAAIN,EAAMsC,cAG5B,C,sGCzDKC,EAAU,SAACC,EAAIC,GACnB,OAAQA,EAAOpB,MACb,IAAK,SACH,OAAO,kBACFmB,GADL,IAEEE,MAAOD,EAAOE,IACdrC,SAASsC,EAAAA,EAAAA,IAASH,EAAOE,IAAKF,EAAOI,cAEzC,IAAK,UACH,OAAO,kBACFL,GADL,IAEEM,WAAW,IAEf,QACE,OAAON,EAEZ,EA0DD,MAxDA,SAAexC,GACb,OAA+B+C,EAAAA,EAAAA,YAAWR,EAAS,CACjDG,MAAO1C,EAAMgD,cAAgB,GAC7B1C,QAASN,EAAMiD,iBAAkB,EACjCH,WAAW,IAHb,eAAOI,EAAP,KAAmBC,EAAnB,KAMQlC,EAAgBjB,EAAhBiB,GAAIa,EAAY9B,EAAZ8B,QACJY,EAAmBQ,EAAnBR,MAAOpC,EAAY4C,EAAZ5C,SAEfI,EAAAA,EAAAA,YAAU,WACRoB,EAAQb,EAAIyB,EAAOpC,EACpB,GAAE,CAACW,EAAIyB,EAAOpC,EAASwB,IAExB,IAAMsB,EAAgB,SAACC,GACrBF,EAAS,CACP9B,KAAM,SACNsB,IAAKU,EAAE1B,OAAOe,MACdG,WAAY7C,EAAM6C,YAErB,EACKS,EAAc,WAClBH,EAAS,CAAE9B,KAAM,WAClB,EACKkC,EACc,UAAlBvD,EAAMuD,SACJ,kBACEtC,GAAIjB,EAAMiB,GACVI,KAAMrB,EAAMqB,KACZmC,YAAaxD,EAAMwD,YACnBd,MAAOQ,EAAWR,MAClBnB,SAAU6B,EACVK,OAAQH,KAGV,qBACErC,GAAIjB,EAAMiB,GACVyC,KAAM1D,EAAM0D,MAAQ,EACpBD,OAAQH,EACR/B,SAAU6B,EACVV,MAAOQ,EAAWR,QAGxB,OACE,iBACE1B,UAAS,wBACNkC,EAAW5C,SAAW4C,EAAWJ,WAAa,yBAFnD,WAKE,kBAAOa,QAAS3D,EAAMiB,GAAtB,SAA2BjB,EAAM4D,QAChCL,GACCL,EAAW5C,SAAW4C,EAAWJ,YAAa,uBAAI9C,EAAMsC,cAG/D,C,4FC1EKuB,EAAc,SAACC,EAAOrB,GAC1B,OAAQA,EAAOpB,MACb,IAAK,eACH,IAAI0C,GAAc,EAClB,IAAK,IAAMC,KAAWF,EAAMG,OACrBH,EAAMG,OAAOD,KAIhBD,EADEC,IAAYvB,EAAOuB,QACPD,GAAetB,EAAOnC,QAEtByD,GAAeD,EAAMG,OAAOD,GAAS1D,SAGvD,OAAO,kBACFwD,GADL,IAEEG,QAAO,kBACFH,EAAMG,QADL,cAEHxB,EAAOuB,QAAU,CAAEtB,MAAOD,EAAOC,MAAOpC,QAASmC,EAAOnC,WAE3DA,QAASyD,IAEb,IAAK,WACH,OAAO,kBACFD,GADL,IAEEG,OAAQxB,EAAOwB,OACfF,YAAatB,EAAOsB,cAExB,QACE,OAAOD,EAEZ,EAEYI,EAAU,SAACC,EAAcC,GACpC,OAA8BrB,EAAAA,EAAAA,YAAWc,EAAa,CACpDI,OAAQE,EACR7D,QAAS8D,IAFX,eAAOC,EAAP,KAAkBlB,EAAlB,KAmBA,MAAO,CAACkB,GAfaC,EAAAA,EAAAA,cAAY,SAACrD,EAAIyB,EAAOpC,GAC3C6C,EAAS,CACP9B,KAAM,eACNqB,MAAOA,EACPpC,QAASA,EACT0D,QAAS/C,GAEZ,GAAE,KACiBqD,EAAAA,EAAAA,cAAY,SAACC,EAAWC,GAC1CrB,EAAS,CACP9B,KAAM,WACN4C,OAAQM,EACRR,YAAaS,GAEhB,GAAE,IAEJ,C,oNCiGD,MAxIA,SAAcxE,GACZ,IAAMyE,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GACxB,GAAsC1E,EAAAA,EAAAA,WAAS,GAA/C,eAAO2E,EAAP,KAAoBC,EAApB,KACA,GAAsDC,EAAAA,EAAAA,KAA9CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,WACvC,GAA+ChB,EAAAA,EAAAA,GAC7C,CACEiB,MAAO,CACLzC,MAAO,GACPpC,SAAS,GAEX8E,SAAU,CACR1C,MAAO,GACPpC,SAAS,KAGb,GAXF,eAAO+D,EAAP,KAAkBgB,EAAlB,KAAgCC,EAAhC,KAyCMC,EAAiB,yCAAG,WAAOlC,GAAP,mFACxBA,EAAEmC,kBACEZ,EAFoB,0CAIOK,EACzBQ,sDACA,OACAC,KAAKC,UAAU,CACbR,MAAOd,EAAUJ,OAAOkB,MAAMzC,MAC9B0C,SAAUf,EAAUJ,OAAOmB,SAAS1C,QAEtC,CACE,eAAgB,qBAZA,OAIdkD,EAJc,OAepBnB,EAAKoB,MAAMD,EAAaE,OAAQF,EAAaG,OAfzB,kGAmBdC,EAAW,IAAIC,UACZC,OAAO,QAAS7B,EAAUJ,OAAOkB,MAAMzC,OAChDsD,EAASE,OAAO,OAAQ7B,EAAUJ,OAAOkC,KAAKzD,OAC9CsD,EAASE,OAAO,WAAY7B,EAAUJ,OAAOmB,SAAS1C,OACtDsD,EAASE,OAAO,QAAS7B,EAAUJ,OAAOmC,MAAM1D,OAvB5B,UAwBOuC,EACzBQ,uDACA,OACAO,GA3BkB,QAwBdJ,EAxBc,OA6BpBnB,EAAKoB,MAAMD,EAAaE,OAAQF,EAAaG,OA7BzB,oHAAH,sDAkCvB,OACE,iCACE,SAACM,EAAA,EAAD,CAAYrB,MAAOA,EAAOsB,QAASpB,KACnC,UAACqB,EAAA,EAAD,CAAMvF,UAAU,iBAAhB,UACG+D,IAAa,SAACyB,EAAA,EAAD,CAAgBC,WAAS,KACvC,wBAAK7B,EAAc,iBAAmB,sBACtC,mBACA,kBAAM8B,SAAUnB,EAAhB,WACIX,IACA,SAAC+B,EAAA,EAAD,CACEpD,QAAQ,QACRtC,GAAG,OACHI,KAAK,OACLuC,MAAM,YACNf,WAAY,EAAC+D,EAAAA,EAAAA,OACbtE,UAAU,sBACVR,QAASuD,KAGXT,IACA,SAACiC,EAAA,EAAD,CACE5F,GAAG,QACHc,QAAM,EACND,QAASuD,EACT/C,UAAU,6BAGd,SAACqE,EAAA,EAAD,CACEpD,QAAQ,QACRtC,GAAG,QACHI,KAAK,QACLuC,MAAM,SACNf,WAAY,EAACiE,EAAAA,EAAAA,OACbxE,UAAU,sCACVR,QAASuD,KAEX,SAACsB,EAAA,EAAD,CACEpD,QAAQ,QACRtC,GAAG,WACHI,KAAK,WACLuC,MAAM,WACNf,WAAY,EAACkE,EAAAA,EAAAA,IAAoB,IACjCzE,UAAU,2DACVR,QAASuD,KAEX,SAACnD,EAAA,EAAD,CAAQb,KAAK,SAAS2F,UAAW3C,EAAU/D,QAA3C,SACGsE,EAAc,QAAU,eAG7B,UAAC1C,EAAA,EAAD,CAAQ+E,SAAO,EAAC9E,QA/GI,WACnByC,EAUHU,GAAY,kBAELjB,EAAUJ,QAFN,IAGPkC,KAAM,CACJzD,MAAO,GACPpC,SAAS,GAEX8F,MAAO,CACL1D,MAAO,KACPpC,SAAS,MAGb,GArBFgF,GAAY,kBAELjB,EAAUJ,QAFN,IAGPkC,UAAMe,EACNd,WAAOc,IAET7C,EAAUJ,OAAOkB,MAAM7E,SAAW+D,EAAUJ,OAAOmB,SAAS9E,SAkBhEuE,GAAe,SAACsC,GAAD,OAAeA,CAAf,GAChB,EAoFK,uBACavC,EAAc,SAAW,gBAK7C,C,2ICvJD,IAAMwC,EAAyB,UACzBC,EAA2B,YAC3BC,EAA2B,YAG3BC,EAAuB,QAGhBX,EAAoB,iBAAO,CAAEvF,KAAM+F,EAAf,EAEpBL,EAAsB,SAAApE,GAAG,MAAK,CACzCtB,KAAMgG,EACN1E,IAAKA,EAF+B,EAUzBmE,EAAkB,iBAAO,CAAEzF,KAAMkG,EAAf,EAElB3E,EAAW,SAACF,EAAOG,GAC9B,IAD6C,EACzCvC,GAAU,EAD+B,ECrBhC,SAAoCkH,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAElE,IAAKE,EAAI,CACP,GAAIG,MAAMC,QAAQN,KAAOE,GAAK,EAAAK,EAAA,GAA2BP,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEQ,OAAqB,CAC/GN,IAAIF,EAAIE,GACZ,IAAIO,EAAI,EAEJC,EAAI,WAAc,EAEtB,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKT,EAAEQ,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACN3F,MAAO8E,EAAES,KAEb,EACA5E,EAAG,SAAWiF,GACZ,MAAMA,CACR,EACAC,EAAGL,EAEP,CAEA,MAAM,IAAIM,UAAU,wIACtB,CAEA,IAEIC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLR,EAAG,WACDT,EAAKA,EAAGkB,KAAKpB,EACf,EACAY,EAAG,WACD,IAAIS,EAAOnB,EAAGoB,OAEd,OADAJ,EAAmBG,EAAKR,KACjBQ,CACT,EACAxF,EAAG,SAAW0F,GACZJ,GAAS,EACTF,EAAMM,CACR,EACAR,EAAG,WACD,IACOG,GAAoC,MAAhBhB,EAAW,QAAWA,EAAW,QAG5D,CAFE,QACA,GAAIiB,EAAQ,MAAMF,CACpB,CACF,EAEJ,CDlC+C,CAErB5F,GAFqB,IAE7C,2BAAoC,CAAC,IAA1BmG,EAAyB,QAC9BA,EAAU3H,OAAS+F,IACrB9G,EAAUA,GAAWoC,EAAMuG,OAAOjB,OAAS,GAEzCgB,EAAU3H,OAASgG,IACrB/G,EAAUA,GAAWoC,EAAMuG,OAAOjB,QAAUgB,EAAUrG,KAEpDqG,EAAU3H,OAASiG,IACrBhH,EAAUA,GAAWoC,EAAMuG,OAAOjB,QAAUgB,EAAUrG,KA7BjC,QA+BnBqG,EAAU3H,OACZf,EAAUA,IAAYoC,GAASsG,EAAUrG,KA/BpB,QAiCnBqG,EAAU3H,OACZf,EAAUA,IAAYoC,GAASsG,EAAUrG,KAEvCqG,EAAU3H,OAASkG,IACrBjH,EAAUA,GAAW,iBAAiB4I,KAAKxG,GAE9C,CArB4C,+BAsB7C,OAAOpC,CACR,C","sources":["Shared/Components/FormElements/ImageUpload/ImageUpload.js","Shared/Components/FormElements/Input/Input.js","Shared/Hooks/Form-Hook.js","User/Pages/Auth.js","Util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport Button from \"../Button/Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nfunction ImageUpload(props) {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (evt) => {\r\n    let pickedFile;\r\n    let fileIsValid;\r\n\r\n    if (evt.target.files || evt.target.files.lenth === 1) {\r\n      pickedFile = evt.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageUpload;\r\n","import React, { useEffect, useReducer } from \"react\";\r\nimport { validate } from \"../../../../Util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst reducer = (st, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...st,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCHED\":\r\n      return {\r\n        ...st,\r\n        isTouched: true,\r\n      };\r\n    default:\r\n      return st;\r\n  }\r\n};\r\n\r\nfunction Input(props) {\r\n  const [inputState, dispatch] = useReducer(reducer, {\r\n    value: props.initialValue || \"\",\r\n    isValid: props.initialisValid || false,\r\n    isTouched: false,\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (e) => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: e.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const handleTouch = () => {\r\n    dispatch({ type: \"TOUCHED\" });\r\n  };\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        value={inputState.value}\r\n        onChange={changeHandler}\r\n        onBlur={handleTouch}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onBlur={handleTouch}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid },\r\n        },\r\n        isValid: formIsValid,\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        ...state,\r\n        inputs: action.inputs,\r\n        formIsValid: action.formIsValid,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInput, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInput,\r\n    isValid: initialFormValidity,\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id,\r\n    });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity,\r\n    });\r\n  }, []);\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport Button from \"../../Shared/Components/FormElements/Button/Button\";\r\nimport ImageUpload from \"../../Shared/Components/FormElements/ImageUpload/ImageUpload\";\r\nimport Input from \"../../Shared/Components/FormElements/Input/Input\";\r\nimport Card from \"../../Shared/Components/UIELements/Card/Card\";\r\nimport ErrorModal from \"../../Shared/Components/UIELements/Error/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/Components/UIELements/LoadingSpinner/LoadingSpinner\";\r\nimport { AuthContext } from \"../../Shared/Context/Auth-Context\";\r\nimport { useForm } from \"../../Shared/Hooks/Form-Hook\";\r\nimport { useHttpClient } from \"../../Shared/Hooks/http-hooks\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../Util/validators\";\r\nimport \"./Auth.css\";\r\n\r\nfunction Auth(props) {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setisLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setisLoginMode((prevMode) => !prevMode);\r\n  };\r\n  const authSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (e) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", formState.inputs.email.value);\r\n        formData.append(\"name\", formState.inputs.name.value);\r\n        formData.append(\"password\", formState.inputs.password.value);\r\n        formData.append(\"image\", formState.inputs.image.value);\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\r\n          \"POST\",\r\n          formData\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (e) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>{isLoginMode ? \"LOGIN Required\" : \"SIGN UP Required\"}</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {!isLoginMode && (\r\n            <Input\r\n              element=\"input\"\r\n              id=\"name\"\r\n              type=\"text\"\r\n              label=\"Your name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a name\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMode && (\r\n            <ImageUpload\r\n              id=\"image\"\r\n              center\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image\"\r\n            />\r\n          )}\r\n          <Input\r\n            element=\"input\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"E-mail\"\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            element=\"input\"\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least five characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["props","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","id","ref","style","display","type","accept","onChange","evt","pickedFile","fileIsValid","target","files","lenth","onInput","center","src","alt","Button","onClick","current","click","errorText","reducer","st","action","value","val","validate","validators","isTouched","useReducer","initialValue","initialisValid","inputState","dispatch","changeHandler","e","handleTouch","element","placeholder","onBlur","rows","htmlFor","label","formReducer","state","formIsValid","inputId","inputs","useForm","initialInput","initialFormValidity","formState","useCallback","inputData","formValidity","auth","useContext","AuthContext","isLoginMode","setisLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","authSubmitHandler","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","Input","VALIDATOR_REQUIRE","ImageUpload","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","disabled","inverse","undefined","prevMode","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}